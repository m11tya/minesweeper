import UIKit

class ViewController: UIViewController {
    
    var game: GameModel!        // –ú–æ–¥–µ–ª—å –∏–≥—Ä—ã
    var buttons: [[UIButton]] = []  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã —Å —Ä–∞–∑–º–µ—Ä–æ–º 10x10
        game = GameModel(rows: 10, columns: 10)
        
        let buttonSize: CGFloat = 30
        let padding: CGFloat = 5
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
        for row in 0..<game.grid.count {
            var rowButtons: [UIButton] = []
            for col in 0..<game.grid[0].count {
                let button = UIButton(frame: CGRect(x: CGFloat(col) * (buttonSize + padding), y: CGFloat(row) * (buttonSize + padding), width: buttonSize, height: buttonSize))
                button.layer.borderWidth = 1
                button.addTarget(self, action: #selector(cellTapped(_:)), for: .touchUpInside)
                button.tag = row * game.grid[0].count + col
                self.view.addSubview(button)
                rowButtons.append(button)
            }
            buttons.append(rowButtons)
        }
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–µ—Ç–∫—É
    @objc func cellTapped(_ sender: UIButton) {
        let row = sender.tag / game.grid[0].count
        let col = sender.tag % game.grid[0].count
        game.revealCell(row: row, column: col)
        updateView()  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
    func updateView() {
        for row in 0..<game.grid.count {
            for col in 0..<game.grid[0].count {
                let button = buttons[row][col]
                if game.revealed[row][col] {
                    if game.grid[row][col] == -1 {
                        button.setTitle("üí£", for: .normal)  // –ï—Å–ª–∏ –º–∏–Ω–∞
                    } else {
                        button.setTitle("\(game.grid[row][col])", for: .normal)  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∏—Å–ª–æ
                    }
                } else {
                    button.setTitle("", for: .normal)  // –ï—Å–ª–∏ –∫–ª–µ—Ç–∫–∞ –Ω–µ —Ä–∞—Å–∫—Ä—ã—Ç–∞
                }
            }
        }
        
        if game.gameOver {
            let alert = UIAlertController(title: "Game Over", message: "You hit a mine!", preferredStyle: .alert)
            alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
            present(alert, animated: true, completion: nil)
        }
    }
}
